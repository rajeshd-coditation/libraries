import * as o from "react";
import e from "prop-types";
import { FieldContext as f } from "./FieldContext.js";
import { useId as c } from "../helpers/useId.js";
const s = ({ children: p, name: r, error: t, hint: i, id: m, required: n, ...a }) => {
  const d = c(m), l = o.useMemo(
    () => ({ name: r, id: d, error: t, hint: i, required: n }),
    [t, d, i, r, n]
  );
  return /* @__PURE__ */ o.createElement("div", { ...a }, /* @__PURE__ */ o.createElement(f.Provider, { value: l }, p));
};
s.defaultProps = {
  error: void 0,
  hint: void 0,
  id: void 0,
  name: void 0,
  required: !1
};
s.propTypes = {
  children: e.node.isRequired,
  error: e.oneOfType([e.string, e.bool]),
  hint: e.oneOfType([e.string, e.bool, e.node, e.arrayOf(e.node)]),
  id: e.oneOfType([e.string, e.number]),
  name: e.string,
  required: e.bool
};
export {
  s as Field
};
