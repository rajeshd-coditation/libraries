import b, { useRef as k, useState as y, useCallback as d, useEffect as _ } from "react";
import l from "prop-types";
import { focusFocusable as G } from "./focusFocusable.js";
import { RawTableContext as N } from "./RawTableContext.js";
import { KeyboardKeys as a } from "../helpers/keyboardKeys.js";
const p = ({ colCount: u, rowCount: c, jumpStep: n, initialCol: E, initialRow: P, ...T }) => {
  const m = k(null), i = k(!1), [o, r] = y(P), [f, s] = y(E), D = d(({ colIndex: t, rowIndex: e }) => {
    s(t), r(e);
  }, []);
  _(() => {
    i.current && G(m.current), i.current || (i.current = !0);
  }, [f, o]);
  const K = (t) => {
    switch (t.key) {
      case a.RIGHT: {
        t.preventDefault(), s((e) => e < u - 1 ? e + 1 : e);
        break;
      }
      case a.LEFT: {
        t.preventDefault(), s((e) => e > 0 ? e - 1 : e);
        break;
      }
      case a.UP: {
        t.preventDefault(), r((e) => e > 0 ? e - 1 : e);
        break;
      }
      case a.DOWN: {
        t.preventDefault(), r((e) => e < c - 1 ? e + 1 : e);
        break;
      }
      case a.HOME: {
        t.preventDefault(), t.ctrlKey && r(0), s(0);
        break;
      }
      case a.END: {
        t.preventDefault(), t.ctrlKey && r(c - 1), s(u - 1);
        break;
      }
      case a.PAGE_DOWN: {
        t.preventDefault(), r((e) => e + n < c ? e + n : c - 1);
        break;
      }
      case a.PAGE_UP: {
        t.preventDefault(), r((e) => e - n > 0 ? e - n : 0);
        break;
      }
    }
  }, R = b.useMemo(() => ({ rowIndex: o, colIndex: f, setTableValues: D }), [f, o, D]);
  return /* @__PURE__ */ b.createElement(N.Provider, { value: R }, /* @__PURE__ */ b.createElement(
    "table",
    {
      role: "grid",
      ref: m,
      "aria-rowcount": c,
      "aria-colcount": u,
      onKeyDown: K,
      ...T
    }
  ));
};
p.defaultProps = {
  jumpStep: 3,
  initialCol: 0,
  initialRow: 0
};
p.propTypes = {
  colCount: l.number.isRequired,
  initialCol: l.number,
  initialRow: l.number,
  jumpStep: l.number,
  rowCount: l.number.isRequired
};
export {
  p as RawTable
};
